name: Auto Update Parent Project Status Based on Sub-Issues

on:
  issues:
    types: [closed]

permissions:
  issues: write
  contents: read
  project-v2: write

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Find Parent Issue Link
        id: find-parent
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.payload.issue.number;
            const timeline = await github.paginate(github.rest.issues.listEventsForTimeline, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              per_page: 100
            });
            
            const parent = timeline.find(event => event.event === 'connected' && event.source?.issue);
            if (parent) {
              console.log(`Parent issue found: #${parent.source.issue.number}`);
              return parent.source.issue.number;
            } else {
              console.log("No parent issue linked.");
              return null;
            }

      - name: Stop if no parent
        if: steps.find-parent.outputs.result == null
        run: echo "No parent linked, skipping."

      - name: Check Parent Project 'Type' == Feature
        id: check-type
        if: steps.find-parent.outputs.result != null
        uses: actions/github-script@v7
        with:
          script: |
            const parentNumber = steps.find-parent.outputs.result;
            const projectId = 'YOUR_PROJECT_ID';
            const typeFieldId = 'YOUR_TYPE_FIELD_ID';

            const parentIssue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parentNumber,
            });

            // Fetch parent issue's Project Item ID
            const itemRes = await github.graphql(`
              query($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectsV2Items(first: 5) {
                      nodes {
                        id
                        project {
                          id
                        }
                      }
                    }
                  }
                }
              }`, { issueId: parentIssue.data.node_id });

            const projectItem = itemRes.node.projectsV2Items.nodes.find(p => p.project.id === projectId);
            if (!projectItem) {
              console.log("❌ Parent issue is not in the project");
              return "not_in_project";
            }

            // Fetch 'Type' field value
            const fieldRes = await github.graphql(`
              query($projectId: ID!, $itemId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    item(id: $itemId) {
                      fieldValues(first: 10) {
                        nodes {
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            field {
                              ... on ProjectV2SingleSelectField {
                                id
                                name
                              }
                            }
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }`, {
                projectId,
                itemId: projectItem.id
              });

            const typeField = fieldRes.node.item.fieldValues.nodes.find(f => f.field.name === 'Type');
            console.log("Type field value:", typeField?.name);
            if (typeField?.name === 'Feature') {
              return "feature";
            } else {
              return "not_feature";
            }

      - name: Stop if parent is not Type Feature
        if: steps.check-type.outputs.result != 'feature'
        run: echo "Parent is not a Feature. Exiting."

      # 👇 Continue with your logic to update status or close parent issue 👇
      - name: Example Step (Your Logic Here)
        if: steps.check-type.outputs.result == 'feature'
        run: echo "✅ Parent is Feature. Proceeding to status check and update."
